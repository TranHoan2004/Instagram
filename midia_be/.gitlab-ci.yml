# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/development/cicd/templates/
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE
  VERSION_TAG: $CI_COMMIT_TAG
  GRADLE_USER_HOME: "$CI_PROJECT_DIR/.gradle"
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

image: amazoncorretto:21

cache:
  key: "gradle-cache"
  paths:
    - .gradle/wrapper
    - .gradle/caches

before_script:
  - chmod +x gradlew

stages:         
  - test
  - build
  - deploy

test-dev:
  environment:
    name: dev
  tags:
    - saas-linux-medium-amd64
  services:
    - name: docker:24.0.5-dind
      command:
        - "--tls=false"
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""   
    DOCKER_DRIVER: overlay2
  stage: test
  script:
    - ./gradlew test 
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev"
    - if: $CI_COMMIT_BRANCH == "dev"
  artifacts:
    when: always
    reports:
      junit: build/test-results/test/TEST-*.xml
    paths:
      - build/reports/tests/
    expire_in: 1 hour

build-docker:      
  stage: build 
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  tags:
    - saas-linux-medium-amd64
  rules:
    - if: $CI_COMMIT_TAG
      when: always
    - when: never
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
  script:
    - echo "Building Docker Image..."
    - docker build -t $IMAGE_NAME:$VERSION_TAG .
    - echo "Docker Image successfully built."
    - echo "Pushing Docker Image..."
    - docker push $IMAGE_NAME:$VERSION_TAG
